define("core_ai/providerdeleteconfirm",["exports","core/str","core/modal_delete_cancel","core/modal_events","core/ajax"],(function(_exports,_str,_modal_delete_cancel,_modal_events,_ajax){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * AI provider deletion confirmation.
   * Renders a confirmation modal when deleting an AI provider.
   *
   * @module     core_ai/providerdeleteconfirm
   * @copyright  2024 Matt Porritt <matt.porritt@moodle.com>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_modal_delete_cancel=_interopRequireDefault(_modal_delete_cancel),_modal_events=_interopRequireDefault(_modal_events),_ajax=_interopRequireDefault(_ajax);const handleDelete=async providerid=>{await(async providerid=>_ajax.default.call([{methodname:"core_ai_delete_provider_instance",args:{providerid:providerid}}])[0])(providerid),window.location.reload()};_exports.init=()=>{document.querySelectorAll(".ai-provider-delete").forEach((button=>{button.addEventListener("click",(e=>{e.preventDefault(),(async e=>{const providerid=e.target.dataset.id,bodyparams={provider:e.target.dataset.provider,name:e.target.dataset.name},modal=await _modal_delete_cancel.default.create({title:await(0,_str.getString)("providerinstancedelete","core_ai"),body:await(0,_str.getString)("providerinstancedeleteconfirm","core_ai",bodyparams),show:!0,removeOnClose:!0});modal.getRoot().on(_modal_events.default.delete,(e=>{e.preventDefault(),handleDelete(providerid),modal.destroy()}))})(e)}))}))}}));

//# sourceMappingURL=providerdeleteconfirm.min.js.map