{"version":3,"file":"prism.min.js","sources":["../src/prism.js"],"sourcesContent":["/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\ndefine(() => {\n\n    var _self = (typeof window !== 'undefined')\n        ? window   // if in browser\n        : (\n            (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n            ? self // if in worker\n            : {}   // if in node js\n        );\n\n    /**\n     * Prism: Lightweight, robust, elegant syntax highlighting\n     * MIT license http://www.opensource.org/licenses/mit-license.php/\n     * @author Lea Verou http://lea.verou.me\n     */\n\n    var Prism = (function (_self){\n\n        // Private helper vars\n        var lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n        var uniqueId = 0;\n\n        var _ = {\n            manual: _self.Prism && _self.Prism.manual,\n            disableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n            util: {\n                encode: function (tokens) {\n                    if (tokens instanceof Token) {\n                        return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n                    } else if (Array.isArray(tokens)) {\n                        return tokens.map(_.util.encode);\n                    } else {\n                        return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n                    }\n                },\n\n                type: function (o) {\n                    return Object.prototype.toString.call(o).slice(8, -1);\n                },\n\n                objId: function (obj) {\n                    if (!obj['__id']) {\n                        Object.defineProperty(obj, '__id', { value: ++uniqueId });\n                    }\n                    return obj['__id'];\n                },\n\n                // Deep clone a language definition (e.g. to extend it)\n                clone: function deepClone(o, visited) {\n                    var clone, id, type = _.util.type(o);\n                    visited = visited || {};\n\n                    switch (type) {\n                        case 'Object':\n                            id = _.util.objId(o);\n                            if (visited[id]) {\n                                return visited[id];\n                            }\n                            clone = {};\n                            visited[id] = clone;\n\n                            for (var key in o) {\n                                if (o.hasOwnProperty(key)) {\n                                    clone[key] = deepClone(o[key], visited);\n                                }\n                            }\n\n                            return clone;\n\n                        case 'Array':\n                            id = _.util.objId(o);\n                            if (visited[id]) {\n                                return visited[id];\n                            }\n                            clone = [];\n                            visited[id] = clone;\n\n                            o.forEach(function (v, i) {\n                                clone[i] = deepClone(v, visited);\n                            });\n\n                            return clone;\n\n                        default:\n                            return o;\n                    }\n                }\n            },\n\n            languages: {\n                extend: function (id, redef) {\n                    var lang = _.util.clone(_.languages[id]);\n\n                    for (var key in redef) {\n                        lang[key] = redef[key];\n                    }\n\n                    return lang;\n                },\n\n                /**\n                 * Insert a token before another token in a language literal\n                 * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n                 * we cannot just provide an object, we need an object and a key.\n                 * @param inside The key (or language id) of the parent\n                 * @param before The key to insert before.\n                 * @param insert Object with the key/value pairs to insert\n                 * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n                 */\n                insertBefore: function (inside, before, insert, root) {\n                    root = root || _.languages;\n                    var grammar = root[inside];\n                    var ret = {};\n\n                    for (var token in grammar) {\n                        if (grammar.hasOwnProperty(token)) {\n\n                            if (token == before) {\n                                for (var newToken in insert) {\n                                    if (insert.hasOwnProperty(newToken)) {\n                                        ret[newToken] = insert[newToken];\n                                    }\n                                }\n                            }\n\n                            // Do not insert token which also occur in insert. See #1525\n                            if (!insert.hasOwnProperty(token)) {\n                                ret[token] = grammar[token];\n                            }\n                        }\n                    }\n\n                    var old = root[inside];\n                    root[inside] = ret;\n\n                    // Update references in other language definitions\n                    _.languages.DFS(_.languages, function(key, value) {\n                        if (value === old && key != inside) {\n                            this[key] = ret;\n                        }\n                    });\n\n                    return ret;\n                },\n\n                // Traverse a language definition with Depth First Search\n                DFS: function DFS(o, callback, type, visited) {\n                    visited = visited || {};\n\n                    var objId = _.util.objId;\n\n                    for (var i in o) {\n                        if (o.hasOwnProperty(i)) {\n                            callback.call(o, i, o[i], type || i);\n\n                            var property = o[i],\n                                propertyType = _.util.type(property);\n\n                            if (propertyType === 'Object' && !visited[objId(property)]) {\n                                visited[objId(property)] = true;\n                                DFS(property, callback, null, visited);\n                            }\n                            else if (propertyType === 'Array' && !visited[objId(property)]) {\n                                visited[objId(property)] = true;\n                                DFS(property, callback, i, visited);\n                            }\n                        }\n                    }\n                }\n            },\n            plugins: {},\n\n            highlightAll: function(async, callback) {\n                _.highlightAllUnder(document, async, callback);\n            },\n\n            highlightAllUnder: function(container, async, callback) {\n                var env = {\n                    callback: callback,\n                    selector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n                };\n\n                _.hooks.run(\"before-highlightall\", env);\n\n                var elements = env.elements || container.querySelectorAll(env.selector);\n\n                for (var i=0, element; element = elements[i++];) {\n                    _.highlightElement(element, async === true, env.callback);\n                }\n            },\n\n            highlightElement: function(element, async, callback) {\n                // Find language\n                var language, grammar, parent = element;\n\n                while (parent && !lang.test(parent.className)) {\n                    parent = parent.parentNode;\n                }\n\n                if (parent) {\n                    language = (parent.className.match(lang) || [,''])[1].toLowerCase();\n                    grammar = _.languages[language];\n                }\n\n                // Set language on the element, if not present\n                element.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n                if (element.parentNode) {\n                    // Set language on the parent, for styling\n                    parent = element.parentNode;\n\n                    if (/pre/i.test(parent.nodeName)) {\n                        parent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n                    }\n                }\n\n                var code = element.textContent;\n\n                var env = {\n                    element: element,\n                    language: language,\n                    grammar: grammar,\n                    code: code\n                };\n\n                var insertHighlightedCode = function (highlightedCode) {\n                    env.highlightedCode = highlightedCode;\n\n                    _.hooks.run('before-insert', env);\n\n                    env.element.innerHTML = env.highlightedCode;\n\n                    _.hooks.run('after-highlight', env);\n                    _.hooks.run('complete', env);\n                    callback && callback.call(env.element);\n                }\n\n                _.hooks.run('before-sanity-check', env);\n\n                if (!env.code) {\n                    _.hooks.run('complete', env);\n                    return;\n                }\n\n                _.hooks.run('before-highlight', env);\n\n                if (!env.grammar) {\n                    insertHighlightedCode(_.util.encode(env.code));\n                    return;\n                }\n\n                if (async && _self.Worker) {\n                    var worker = new Worker(_.filename);\n\n                    worker.onmessage = function(evt) {\n                        insertHighlightedCode(evt.data);\n                    };\n\n                    worker.postMessage(JSON.stringify({\n                        language: env.language,\n                        code: env.code,\n                        immediateClose: true\n                    }));\n                }\n                else {\n                    insertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n                }\n            },\n\n            highlight: function (text, grammar, language) {\n                var env = {\n                    code: text,\n                    grammar: grammar,\n                    language: language\n                };\n                _.hooks.run('before-tokenize', env);\n                env.tokens = _.tokenize(env.code, env.grammar);\n                _.hooks.run('after-tokenize', env);\n                return Token.stringify(_.util.encode(env.tokens), env.language);\n            },\n\n            matchGrammar: function (text, strarr, grammar, index, startPos, oneshot, target) {\n                for (var token in grammar) {\n                    if(!grammar.hasOwnProperty(token) || !grammar[token]) {\n                        continue;\n                    }\n\n                    if (token == target) {\n                        return;\n                    }\n\n                    var patterns = grammar[token];\n                    patterns = (_.util.type(patterns) === \"Array\") ? patterns : [patterns];\n\n                    for (var j = 0; j < patterns.length; ++j) {\n                        var pattern = patterns[j],\n                            inside = pattern.inside,\n                            lookbehind = !!pattern.lookbehind,\n                            greedy = !!pattern.greedy,\n                            lookbehindLength = 0,\n                            alias = pattern.alias;\n\n                        if (greedy && !pattern.pattern.global) {\n                            // Without the global flag, lastIndex won't work\n                            var flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n                            pattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n                        }\n\n                        pattern = pattern.pattern || pattern;\n\n                        // Don’t cache length as it changes during the loop\n                        for (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n\n                            var str = strarr[i];\n\n                            if (strarr.length > text.length) {\n                                // Something went terribly wrong, ABORT, ABORT!\n                                return;\n                            }\n\n                            if (str instanceof Token) {\n                                continue;\n                            }\n\n                            if (greedy && i != strarr.length - 1) {\n                                pattern.lastIndex = pos;\n                                var match = pattern.exec(text);\n                                if (!match) {\n                                    break;\n                                }\n\n                                var from = match.index + (lookbehind ? match[1].length : 0),\n                                    to = match.index + match[0].length,\n                                    k = i,\n                                    p = pos;\n\n                                for (var len = strarr.length; k < len && (p < to || (!strarr[k].type && !strarr[k - 1].greedy)); ++k) {\n                                    p += strarr[k].length;\n                                    // Move the index i to the element in strarr that is closest to from\n                                    if (from >= p) {\n                                        ++i;\n                                        pos = p;\n                                    }\n                                }\n\n                                // If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n                                if (strarr[i] instanceof Token) {\n                                    continue;\n                                }\n\n                                // Number of tokens to delete and replace with the new match\n                                delNum = k - i;\n                                str = text.slice(pos, p);\n                                match.index -= pos;\n                            } else {\n                                pattern.lastIndex = 0;\n\n                                var match = pattern.exec(str),\n                                    delNum = 1;\n                            }\n\n                            if (!match) {\n                                if (oneshot) {\n                                    break;\n                                }\n\n                                continue;\n                            }\n\n                            if(lookbehind) {\n                                lookbehindLength = match[1] ? match[1].length : 0;\n                            }\n\n                            var from = match.index + lookbehindLength,\n                                match = match[0].slice(lookbehindLength),\n                                to = from + match.length,\n                                before = str.slice(0, from),\n                                after = str.slice(to);\n\n                            var args = [i, delNum];\n\n                            if (before) {\n                                ++i;\n                                pos += before.length;\n                                args.push(before);\n                            }\n\n                            var wrapped = new Token(token, inside? _.tokenize(match, inside) : match, alias, match, greedy);\n\n                            args.push(wrapped);\n\n                            if (after) {\n                                args.push(after);\n                            }\n\n                            Array.prototype.splice.apply(strarr, args);\n\n                            if (delNum != 1)\n                                _.matchGrammar(text, strarr, grammar, i, pos, true, token);\n\n                            if (oneshot)\n                                break;\n                        }\n                    }\n                }\n            },\n\n            tokenize: function(text, grammar) {\n                var strarr = [text];\n\n                var rest = grammar.rest;\n\n                if (rest) {\n                    for (var token in rest) {\n                        grammar[token] = rest[token];\n                    }\n\n                    delete grammar.rest;\n                }\n\n                _.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n                return strarr;\n            },\n\n            hooks: {\n                all: {},\n\n                add: function (name, callback) {\n                    var hooks = _.hooks.all;\n\n                    hooks[name] = hooks[name] || [];\n\n                    hooks[name].push(callback);\n                },\n\n                run: function (name, env) {\n                    var callbacks = _.hooks.all[name];\n\n                    if (!callbacks || !callbacks.length) {\n                        return;\n                    }\n\n                    for (var i=0, callback; callback = callbacks[i++];) {\n                        callback(env);\n                    }\n                }\n            },\n\n            Token: Token\n        };\n\n        _self.Prism = _;\n\n        function Token(type, content, alias, matchedStr, greedy) {\n            this.type = type;\n            this.content = content;\n            this.alias = alias;\n            // Copy of the full string this token was created from\n            this.length = (matchedStr || \"\").length|0;\n            this.greedy = !!greedy;\n        }\n\n        Token.stringify = function(o, language, parent) {\n            if (typeof o == 'string') {\n                return o;\n            }\n\n            if (Array.isArray(o)) {\n                return o.map(function(element) {\n                    return Token.stringify(element, language, o);\n                }).join('');\n            }\n\n            var env = {\n                type: o.type,\n                content: Token.stringify(o.content, language, parent),\n                tag: 'span',\n                classes: ['token', o.type],\n                attributes: {},\n                language: language,\n                parent: parent\n            };\n\n            if (o.alias) {\n                var aliases = Array.isArray(o.alias) ? o.alias : [o.alias];\n                Array.prototype.push.apply(env.classes, aliases);\n            }\n\n            _.hooks.run('wrap', env);\n\n            var attributes = Object.keys(env.attributes).map(function(name) {\n                return name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n            }).join(' ');\n\n            return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';\n\n        };\n\n        if (!_self.document) {\n            if (!_self.addEventListener) {\n                // in Node.js\n                return _;\n            }\n\n            if (!_.disableWorkerMessageHandler) {\n                // In worker\n                _self.addEventListener('message', function (evt) {\n                    var message = JSON.parse(evt.data),\n                        lang = message.language,\n                        code = message.code,\n                        immediateClose = message.immediateClose;\n\n                    _self.postMessage(_.highlight(code, _.languages[lang], lang));\n                    if (immediateClose) {\n                        _self.close();\n                    }\n                }, false);\n            }\n\n            return _;\n        }\n\n        //Get current script and highlight\n        var script = document.currentScript || [].slice.call(document.getElementsByTagName(\"script\")).pop();\n\n        if (script) {\n            _.filename = script.src;\n\n            if (!_.manual && !script.hasAttribute('data-manual')) {\n                if(document.readyState !== \"loading\") {\n                    if (window.requestAnimationFrame) {\n                        window.requestAnimationFrame(_.highlightAll);\n                    } else {\n                        window.setTimeout(_.highlightAll, 16);\n                    }\n                }\n                else {\n                    document.addEventListener('DOMContentLoaded', _.highlightAll);\n                }\n            }\n        }\n\n        return _;\n\n    })(_self);\n\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = Prism;\n    }\n\n    // hack for components to work correctly in node.js\n    if (typeof global !== 'undefined') {\n        global.Prism = Prism;\n    }\n\n\n    /* **********************************************\n        Begin prism-markup.js\n    ********************************************** */\n\n    Prism.languages.markup = {\n    comment: /<!--[\\s\\S]*?-->/,\n    prolog: /<\\?[\\s\\S]+?\\?>/,\n    doctype: /<!DOCTYPE[\\s\\S]+?>/i,\n    cdata: /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n    tag: {\n        pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,\n        greedy: true,\n        inside: {\n        tag: {\n            pattern: /^<\\/?[^\\s>\\/]+/i,\n            inside: {\n            punctuation: /^<\\/?/,\n            namespace: /^[^\\s>\\/:]+:/,\n            },\n        },\n        'attr-value': {\n            pattern: /=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/i,\n            inside: {\n            punctuation: [\n                /^=/,\n                {\n                pattern: /(^|[^\\\\])[\"']/,\n                lookbehind: true,\n                },\n            ],\n            },\n        },\n        punctuation: /\\/?>/,\n        'attr-name': {\n            pattern: /[^\\s>\\/]+/,\n            inside: {\n            namespace: /^[^\\s>\\/:]+:/,\n            },\n        },\n\n        },\n    },\n    entity: /&#?[\\da-z]{1,8};/i,\n    };\n\n    Prism.languages.markup.tag.inside['attr-value'].inside.entity =\tPrism.languages.markup.entity;\n\n    // Plugin to make entity title show the real entity, idea by Roman Komarov\n    Prism.hooks.add('wrap', (env) => {\n\n        if (env.type === 'entity') {\n            env.attributes['title'] = env.content.replace(/&amp;/, '&');\n        }\n    });\n\n    Prism.languages.xml = Prism.languages.markup;\n    Prism.languages.html = Prism.languages.markup;\n    Prism.languages.mathml = Prism.languages.markup;\n    Prism.languages.svg = Prism.languages.markup;\n\n\n    /* **********************************************\n        Begin prism-css.js\n    ********************************************** */\n\n    Prism.languages.css = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\//,\n    atrule: {\n        pattern: /@[\\w-]+?.*?(?:;|(?=\\s*\\{))/i,\n        inside: {\n        rule: /@[\\w-]+/,\n        // See rest below\n        },\n    },\n    url: /url\\((?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,\n    selector: /[^{}\\s][^{};]*?(?=\\s*\\{)/,\n    string: {\n        pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true,\n    },\n    property: /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n    important: /\\B!important\\b/i,\n    function: /[-a-z0-9]+(?=\\()/i,\n    punctuation: /[(){};:]/,\n    };\n\n    Prism.languages.css.atrule.inside.rest = Prism.languages.css;\n\n    if (Prism.languages.markup) {\n    Prism.languages.insertBefore('markup', 'tag', {\n        style: {\n        pattern: /(<style[\\s\\S]*?>)[\\s\\S]*?(?=<\\/style>)/i,\n        lookbehind: true,\n        inside: Prism.languages.css,\n        alias: 'language-css',\n        greedy: true,\n        },\n    });\n\n    Prism.languages.insertBefore('inside', 'attr-value', {\n        'style-attr': {\n        pattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n        inside: {\n            'attr-name': {\n            pattern: /^\\s*style/i,\n            inside: Prism.languages.markup.tag.inside,\n            },\n            punctuation: /^\\s*=\\s*['\"]|['\"]\\s*$/,\n            'attr-value': {\n            pattern: /.+/i,\n            inside: Prism.languages.css,\n            },\n        },\n        alias: 'language-css',\n        },\n    }, Prism.languages.markup.tag);\n    }\n\n    /* **********************************************\n        Begin prism-clike.js\n    ********************************************** */\n\n    Prism.languages.clike = {\n    comment: [\n        {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true,\n        },\n        {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true,\n        },\n    ],\n    string: {\n        pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true,\n    },\n    'class-name': {\n        pattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n        lookbehind: true,\n        inside: {\n        punctuation: /[.\\\\]/,\n        },\n    },\n    keyword: /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    function: /[a-z0-9_]+(?=\\()/i,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    operator: /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n    punctuation: /[{}[\\];(),.:]/,\n    };\n\n\n    /***********************************************\n         Begin prism-javascript.js\n    ***********************************************/\n\n    Prism.languages.javascript = Prism.languages.extend('clike', {\n    keyword: /\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,\n    number: /\\b(?:0[xX][\\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+|NaN|Infinity)\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n    function: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*\\()/i,\n    operator: /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/,\n    });\n\n    Prism.languages.insertBefore('javascript', 'keyword', {\n    regex: {\n        pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[[^\\]\\r\\n]+]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n        lookbehind: true,\n        greedy: true,\n    },\n    // This must be declared before keyword because we use \"function\" inside the look-forward\n    'function-variable': {\n        pattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i,\n        alias: 'function',\n    },\n    constant: /\\b[A-Z][A-Z\\d_]*\\b/,\n    });\n\n    Prism.languages.insertBefore('javascript', 'string', {\n    'template-string': {\n        pattern: /`(?:\\\\[\\s\\S]|\\${[^}]+}|[^\\\\`])*`/,\n        greedy: true,\n        inside: {\n        interpolation: {\n            pattern: /\\${[^}]+}/,\n            inside: {\n            'interpolation-punctuation': {\n                pattern: /^\\${|}$/,\n                alias: 'punctuation',\n            },\n            rest: null, // See below\n            },\n        },\n        string: /[\\s\\S]+/,\n        },\n    },\n    });\n    Prism.languages.javascript['template-string'].inside.interpolation.inside.rest = Prism.languages.javascript;\n\n    if (Prism.languages.markup) {\n    Prism.languages.insertBefore('markup', 'tag', {\n        script: {\n        pattern: /(<script[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\n        lookbehind: true,\n        inside: Prism.languages.javascript,\n        alias: 'language-javascript',\n        greedy: true,\n        },\n    });\n    }\n\n    Prism.languages.js = Prism.languages.javascript;\n\n    /***********************************************\n         Begin component prism-markup-templating.js\n    ***********************************************/\n    (function (Prism) {\n\n        /**\n         * Returns the placeholder for the given language id and index.\n         *\n         * @param {string} language\n         * @param {string|number} index\n         * @returns {string}\n         */\n        function getPlaceholder(language, index) {\n            return '___' + language.toUpperCase() + index + '___';\n        }\n\n        Object.defineProperties(Prism.languages['markup-templating'] = {}, {\n            buildPlaceholders: {\n                /**\n                 * Tokenize all inline templating expressions matching `placeholderPattern`.\n                 *\n                 * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n                 * `true` will be replaced.\n                 *\n                 * @param {object} env The environment of the `before-tokenize` hook.\n                 * @param {string} language The language id.\n                 * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n                 * @param {(match: string) => boolean} [replaceFilter]\n                 */\n                value: function (env, language, placeholderPattern, replaceFilter) {\n                    if (env.language !== language) {\n                        return;\n                    }\n\n                    var tokenStack = env.tokenStack = [];\n\n                    env.code = env.code.replace(placeholderPattern, function (match) {\n                        if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n                            return match;\n                        }\n                        var i = tokenStack.length;\n                        var placeholder;\n\n                        // Check for existing strings\n                        while (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1)\n                            ++i;\n\n                        // Create a sparse array\n                        tokenStack[i] = match;\n\n                        return placeholder;\n                    });\n\n                    // Switch the grammar to markup\n                    env.grammar = Prism.languages.markup;\n                }\n            },\n            tokenizePlaceholders: {\n                /**\n                 * Replace placeholders with proper tokens after tokenizing.\n                 *\n                 * @param {object} env The environment of the `after-tokenize` hook.\n                 * @param {string} language The language id.\n                 */\n                value: function (env, language) {\n                    if (env.language !== language || !env.tokenStack) {\n                        return;\n                    }\n\n                    // Switch the grammar back\n                    env.grammar = Prism.languages[language];\n\n                    var j = 0;\n                    var keys = Object.keys(env.tokenStack);\n\n                    function walkTokens(tokens) {\n                        for (var i = 0; i < tokens.length; i++) {\n                            // all placeholders are replaced already\n                            if (j >= keys.length) {\n                                break;\n                            }\n\n                            var token = tokens[i];\n                            if (typeof token === 'string' || (token.content && typeof token.content === 'string')) {\n                                var k = keys[j];\n                                var t = env.tokenStack[k];\n                                var s = typeof token === 'string' ? token : token.content;\n                                var placeholder = getPlaceholder(language, k);\n\n                                var index = s.indexOf(placeholder);\n                                if (index > -1) {\n                                    ++j;\n\n                                    var before = s.substring(0, index);\n                                    var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n                                    var after = s.substring(index + placeholder.length);\n\n                                    var replacement = [];\n                                    if (before) {\n                                        replacement.push.apply(replacement, walkTokens([before]));\n                                    }\n                                    replacement.push(middle);\n                                    if (after) {\n                                        replacement.push.apply(replacement, walkTokens([after]));\n                                    }\n\n                                    if (typeof token === 'string') {\n                                        tokens.splice.apply(tokens, [i, 1].concat(replacement));\n                                    } else {\n                                        token.content = replacement;\n                                    }\n                                }\n                            } else if (token.content /* && typeof token.content !== 'string' */) {\n                                walkTokens(token.content);\n                            }\n                        }\n\n                        return tokens;\n                    }\n\n                    walkTokens(env.tokens);\n                }\n            }\n        });\n\n    }(Prism));\n\n    /***********************************************\n         Begin component prism-php.js\n    ***********************************************/\n    /**\n     * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n     * Modified by Miles Johnson: http://milesj.me\n     *\n     * Supports the following:\n     * \t\t- Extends clike syntax\n     * \t\t- Support for PHP 5.3+ (namespaces, traits, generators, etc)\n     * \t\t- Smarter constant and function matching\n     *\n     * Adds the following new token classes:\n     * \t\tconstant, delimiter, variable, function, package\n     */\n    (function (Prism) {\n        Prism.languages.php = Prism.languages.extend('clike', {\n            'keyword': /\\b(?:__halt_compiler|abstract|and|array|as|break|callable|case|catch|class|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|eval|exit|extends|final|finally|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|namespace|new|or|parent|print|private|protected|public|require|require_once|return|static|switch|throw|trait|try|unset|use|var|while|xor|yield)\\b/i,\n            'boolean': {\n                pattern: /\\b(?:false|true)\\b/i,\n                alias: 'constant'\n            },\n            'constant': [\n                /\\b[A-Z_][A-Z0-9_]*\\b/,\n                /\\b(?:null)\\b/i,\n            ],\n            'comment': {\n                pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n                lookbehind: true\n            }\n        });\n\n        Prism.languages.insertBefore('php', 'string', {\n            'shell-comment': {\n                pattern: /(^|[^\\\\])#.*/,\n                lookbehind: true,\n                alias: 'comment'\n            }\n        });\n\n        Prism.languages.insertBefore('php', 'comment', {\n            'delimiter': {\n                pattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n                alias: 'important'\n            }\n        });\n\n        Prism.languages.insertBefore('php', 'keyword', {\n            'variable': /\\$+(?:\\w+\\b|(?={))/i,\n            'package': {\n                pattern: /(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+/,\n                lookbehind: true,\n                inside: {\n                    punctuation: /\\\\/\n                }\n            }\n        });\n\n        // Must be defined after the function pattern\n        Prism.languages.insertBefore('php', 'operator', {\n            'property': {\n                pattern: /(->)[\\w]+/,\n                lookbehind: true\n            }\n        });\n\n        var string_interpolation = {\n            pattern: /{\\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[.+?]|->\\w+)*)/,\n            lookbehind: true,\n            inside: {\n                rest: Prism.languages.php\n            }\n        };\n\n        Prism.languages.insertBefore('php', 'string', {\n            'nowdoc-string': {\n                pattern: /<<<'([^']+)'(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;/,\n                greedy: true,\n                alias: 'string',\n                inside: {\n                    'delimiter': {\n                        pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n                        alias: 'symbol',\n                        inside: {\n                            'punctuation': /^<<<'?|[';]$/\n                        }\n                    }\n                }\n            },\n            'heredoc-string': {\n                pattern: /<<<(?:\"([^\"]+)\"(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;|([a-z_]\\w*)(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\2;)/i,\n                greedy: true,\n                alias: 'string',\n                inside: {\n                    'delimiter': {\n                        pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n                        alias: 'symbol',\n                        inside: {\n                            'punctuation': /^<<<\"?|[\";]$/\n                        }\n                    },\n                    'interpolation': string_interpolation // See below\n                }\n            },\n            'single-quoted-string': {\n                pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n                greedy: true,\n                alias: 'string'\n            },\n            'double-quoted-string': {\n                pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n                greedy: true,\n                alias: 'string',\n                inside: {\n                    'interpolation': string_interpolation // See below\n                }\n            }\n        });\n        // The different types of PHP strings \"replace\" the C-like standard string\n        delete Prism.languages.php['string'];\n\n        Prism.hooks.add('before-tokenize', function(env) {\n            if (!/<\\?/.test(env.code)) {\n                return;\n            }\n\n            var phpPattern = /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#)(?:[^?\\n\\r]|\\?(?!>))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$))*?(?:\\?>|$)/ig;\n            Prism.languages['markup-templating'].buildPlaceholders(env, 'php', phpPattern);\n        });\n\n        Prism.hooks.add('after-tokenize', function(env) {\n            Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php');\n        });\n\n    }(Prism));\n\n    Prism.languages.insertBefore('php', 'variable', {\n        'this': /\\$this\\b/,\n        'global': /\\$(?:_(?:SERVER|GET|POST|FILES|REQUEST|SESSION|ENV|COOKIE)|GLOBALS|HTTP_RAW_POST_DATA|argc|argv|php_errormsg|http_response_header)\\b/,\n        'scope': {\n            pattern: /\\b[\\w\\\\]+::/,\n            inside: {\n                keyword: /static|self|parent/,\n                punctuation: /::|\\\\/\n            }\n        }\n    });\n\n    /***********************************************\n         Begin component prism-ruby.js\n    ***********************************************/\n    /**\n     * Original by Samuel Flores\n     *\n     * Adds the following new token classes:\n     * \t\tconstant, builtin, variable, symbol, regex\n     */\n    (function(Prism) {\n        Prism.languages.ruby = Prism.languages.extend('clike', {\n            'comment': [\n                /#.*/,\n                {\n                    pattern: /^=begin\\s[\\s\\S]*?^=end/m,\n                    greedy: true\n                }\n            ],\n            'keyword': /\\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|false|for|if|in|module|new|next|nil|not|or|protected|private|public|raise|redo|require|rescue|retry|return|self|super|then|throw|true|undef|unless|until|when|while|yield)\\b/\n        });\n\n        var interpolation = {\n            pattern: /#\\{[^}]+\\}/,\n            inside: {\n                'delimiter': {\n                    pattern: /^#\\{|\\}$/,\n                    alias: 'tag'\n                },\n                rest: Prism.languages.ruby\n            }\n        };\n\n        delete Prism.languages.ruby.function;\n\n        Prism.languages.insertBefore('ruby', 'keyword', {\n            'regex': [\n                {\n                    pattern: /%r([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[gim]{0,3}/,\n                    greedy: true,\n                    inside: {\n                        'interpolation': interpolation\n                    }\n                },\n                {\n                    pattern: /%r\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[gim]{0,3}/,\n                    greedy: true,\n                    inside: {\n                        'interpolation': interpolation\n                    }\n                },\n                {\n                    // Here we need to specifically allow interpolation\n                    pattern: /%r\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}[gim]{0,3}/,\n                    greedy: true,\n                    inside: {\n                        'interpolation': interpolation\n                    }\n                },\n                {\n                    pattern: /%r\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\][gim]{0,3}/,\n                    greedy: true,\n                    inside: {\n                        'interpolation': interpolation\n                    }\n                },\n                {\n                    pattern: /%r<(?:[^<>\\\\]|\\\\[\\s\\S])*>[gim]{0,3}/,\n                    greedy: true,\n                    inside: {\n                        'interpolation': interpolation\n                    }\n                },\n                {\n                    pattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gim]{0,3}(?=\\s*($|[\\r\\n,.;})]))/,\n                    lookbehind: true,\n                    greedy: true\n                }\n            ],\n            'variable': /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n            'symbol': {\n                pattern: /(^|[^:]):[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n                lookbehind: true\n            },\n            'method-definition': {\n                pattern: /(\\bdef\\s+)[\\w.]+/,\n                lookbehind: true,\n                inside: {\n                    'function': /\\w+$/,\n                    rest: Prism.languages.ruby\n                }\n            }\n        });\n\n        Prism.languages.insertBefore('ruby', 'number', {\n            'builtin': /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\\b/,\n            'constant': /\\b[A-Z]\\w*(?:[?!]|\\b)/\n        });\n\n        Prism.languages.ruby.string = [\n            {\n                pattern: /%[qQiIwWxs]?([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n                greedy: true,\n                inside: {\n                    'interpolation': interpolation\n                }\n            },\n            {\n                pattern: /%[qQiIwWxs]?\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\n                greedy: true,\n                inside: {\n                    'interpolation': interpolation\n                }\n            },\n            {\n                // Here we need to specifically allow interpolation\n                pattern: /%[qQiIwWxs]?\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/,\n                greedy: true,\n                inside: {\n                    'interpolation': interpolation\n                }\n            },\n            {\n                pattern: /%[qQiIwWxs]?\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/,\n                greedy: true,\n                inside: {\n                    'interpolation': interpolation\n                }\n            },\n            {\n                pattern: /%[qQiIwWxs]?<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\n                greedy: true,\n                inside: {\n                    'interpolation': interpolation\n                }\n            },\n            {\n                pattern: /(\"|')(?:#\\{[^}]+\\}|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n                greedy: true,\n                inside: {\n                    'interpolation': interpolation\n                }\n            }\n        ];\n\n        Prism.languages.rb = Prism.languages.ruby;\n    }(Prism));\n\n    /***********************************************\n         Begin component prism-python.js\n    ***********************************************/\n    Prism.languages.python = {\n        'comment': {\n            pattern: /(^|[^\\\\])#.*/,\n            lookbehind: true\n        },\n        'string-interpolation': {\n            pattern: /(?:f|rf|fr)(?:(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n            greedy: true,\n            inside: {\n                'interpolation': {\n                    // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n                    pattern: /((?:^|[^{])(?:{{)*){(?!{)(?:[^{}]|{(?!{)(?:[^{}]|{(?!{)(?:[^{}])+})+})+}/,\n                    lookbehind: true,\n                    inside: {\n                        'format-spec': {\n                            pattern: /(:)[^:(){}]+(?=}$)/,\n                            lookbehind: true\n                        },\n                        'conversion-option': {\n                            pattern: /![sra](?=[:}]$)/,\n                            alias: 'punctuation'\n                        },\n                        rest: null\n                    }\n                },\n                'string': /[\\s\\S]+/\n            }\n        },\n        'triple-quoted-string': {\n            pattern: /(?:[rub]|rb|br)?(\"\"\"|''')[\\s\\S]+?\\1/i,\n            greedy: true,\n            alias: 'string'\n        },\n        'string': {\n            pattern: /(?:[rub]|rb|br)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n            greedy: true\n        },\n        'function': {\n            pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n            lookbehind: true\n        },\n        'class-name': {\n            pattern: /(\\bclass\\s+)\\w+/i,\n            lookbehind: true\n        },\n        'decorator': {\n            pattern: /(^\\s*)@\\w+(?:\\.\\w+)*/i,\n            lookbehind: true,\n            alias: ['annotation', 'punctuation'],\n            inside: {\n                'punctuation': /\\./\n            }\n        },\n        'keyword': /\\b(?:and|as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n        'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n        'boolean': /\\b(?:True|False|None)\\b/,\n        'number': /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n        'operator': /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n        'punctuation': /[{}[\\];(),.:]/\n    };\n\n    Prism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = Prism.languages.python;\n\n    Prism.languages.py = Prism.languages.python;\n\n    /***********************************************\n         Begin component prism-java.js\n    ***********************************************/\n    (function (Prism) {\n\n        var keywords = /\\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while|var|null|exports|module|open|opens|provides|requires|to|transitive|uses|with)\\b/;\n\n        // based on the java naming conventions\n        var className = /\\b[A-Z](?:\\w*[a-z]\\w*)?\\b/;\n\n        Prism.languages.java = Prism.languages.extend('clike', {\n            'class-name': [\n                className,\n\n                // variables and parameters\n                // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n                /\\b[A-Z]\\w*(?=\\s+\\w+\\s*[;,=())])/\n            ],\n            'keyword': keywords,\n            'function': [\n                Prism.languages.clike.function,\n                {\n                    pattern: /(\\:\\:)[a-z_]\\w*/,\n                    lookbehind: true\n                }\n            ],\n            'number': /\\b0b[01][01_]*L?\\b|\\b0x[\\da-f_]*\\.?[\\da-f_p+-]+\\b|(?:\\b\\d[\\d_]*\\.?[\\d_]*|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n            'operator': {\n                pattern: /(^|[^.])(?:<<=?|>>>?=?|->|([-+&|])\\2|[?:~]|[-+*/%&|^!=<>]=?)/m,\n                lookbehind: true\n            }\n        });\n\n        Prism.languages.insertBefore('java', 'class-name', {\n            'annotation': {\n                alias: 'punctuation',\n                pattern: /(^|[^.])@\\w+/,\n                lookbehind: true\n            },\n            'namespace': {\n                pattern: /(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)[a-z]\\w*(\\.[a-z]\\w*)+/,\n                lookbehind: true,\n                inside: {\n                    'punctuation': /\\./,\n                }\n            },\n            'generics': {\n                pattern: /<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<[\\w\\s,.&?]*>)*>)*>)*>/,\n                inside: {\n                    'class-name': className,\n                    'keyword': keywords,\n                    'punctuation': /[<>(),.:]/,\n                    'operator': /[?&|]/\n                }\n            }\n        });\n    }(Prism));\n\n    /***********************************************\n         Begin component prism-c.js\n    ***********************************************/\n    Prism.languages.c = Prism.languages.extend('clike', {\n        'class-name': {\n            pattern: /(\\b(?:enum|struct)\\s+)\\w+/,\n            lookbehind: true\n        },\n        'keyword': /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n        'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/,\n        'number': /(?:\\b0x(?:[\\da-f]+\\.?[\\da-f]*|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]*/i\n    });\n\n    Prism.languages.insertBefore('c', 'string', {\n        'macro': {\n            // allow for multiline macro definitions\n            // spaces after the # character compile fine with gcc\n            pattern: /(^\\s*)#\\s*[a-z]+(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n            lookbehind: true,\n            alias: 'property',\n            inside: {\n                // highlight the path of the include statement as a string\n                'string': {\n                    pattern: /(#\\s*include\\s*)(?:<.+?>|(\"|')(?:\\\\?.)+?\\2)/,\n                    lookbehind: true\n                },\n                // highlight macro directives as keywords\n                'directive': {\n                    pattern: /(#\\s*)\\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\\b/,\n                    lookbehind: true,\n                    alias: 'keyword'\n                }\n            }\n        },\n        // highlight predefined macros as constants\n        'constant': /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\n    });\n\n    delete Prism.languages.c['boolean'];\n\n    /***********************************************\n         Begin component prism-csharp.js\n    ***********************************************/\n    Prism.languages.csharp = Prism.languages.extend('clike', {\n        'keyword': /\\b(?:abstract|add|alias|as|ascending|async|await|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|descending|do|double|dynamic|else|enum|event|explicit|extern|false|finally|fixed|float|for|foreach|from|get|global|goto|group|if|implicit|in|int|interface|internal|into|is|join|let|lock|long|namespace|new|null|object|operator|orderby|out|override|params|partial|private|protected|public|readonly|ref|remove|return|sbyte|sealed|select|set|short|sizeof|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort|using|value|var|virtual|void|volatile|where|while|yield)\\b/,\n        'string': [\n            {\n                pattern: /@(\"|')(?:\\1\\1|\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n                greedy: true\n            },\n            {\n                pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*?\\1/,\n                greedy: true\n            }\n        ],\n        'class-name': [\n            {\n                // (Foo bar, Bar baz)\n                pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=\\s+\\w+)/,\n                inside: {\n                    punctuation: /\\./\n                }\n            },\n            {\n                // [Foo]\n                pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n                lookbehind: true,\n                inside: {\n                    punctuation: /\\./\n                }\n            },\n            {\n                // class Foo : Bar\n                pattern: /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n                lookbehind: true,\n                inside: {\n                    punctuation: /\\./\n                }\n            },\n            {\n                // class Foo\n                pattern: /((?:\\b(?:class|interface|new)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n                lookbehind: true,\n                inside: {\n                    punctuation: /\\./\n                }\n            }\n        ],\n        'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)f?/i,\n        'operator': />>=?|<<=?|[-=]>|([-+&|?])\\1|~|[-+*/%&|^!=<>]=?/,\n        'punctuation': /\\?\\.?|::|[{}[\\];(),.:]/\n    });\n\n    Prism.languages.insertBefore('csharp', 'class-name', {\n        'generic-method': {\n            pattern: /\\w+\\s*<[^>\\r\\n]+?>\\s*(?=\\()/,\n            inside: {\n                function: /^\\w+/,\n                'class-name': {\n                    pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b/,\n                    inside: {\n                        punctuation: /\\./\n                    }\n                },\n                keyword: Prism.languages.csharp.keyword,\n                punctuation: /[<>(),.:]/\n            }\n        },\n        'preprocessor': {\n            pattern: /(^\\s*)#.*/m,\n            lookbehind: true,\n            alias: 'property',\n            inside: {\n                // highlight preprocessor directives as keywords\n                'directive': {\n                    pattern: /(\\s*#)\\b(?:define|elif|else|endif|endregion|error|if|line|pragma|region|undef|warning)\\b/,\n                    lookbehind: true,\n                    alias: 'keyword'\n                }\n            }\n        }\n    });\n\n    Prism.languages.dotnet = Prism.languages.csharp;\n\n    /***********************************************\n         Begin component prism-cpp.js\n    ***********************************************/\n    Prism.languages.cpp = Prism.languages.extend('c', {\n        'class-name': {\n            pattern: /(\\b(?:class|enum|struct)\\s+)\\w+/,\n            lookbehind: true\n        },\n        'keyword': /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,\n        'boolean': /\\b(?:true|false)\\b/,\n        'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/\n    });\n\n    Prism.languages.insertBefore('cpp', 'string', {\n        'raw-string': {\n            pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n            alias: 'string',\n            greedy: true\n        }\n    });\n});"],"names":["define","Prism","_self","lang","uniqueId","_","manual","disableWorkerMessageHandler","util","encode","tokens","Token","type","content","alias","Array","isArray","map","replace","o","Object","prototype","toString","call","slice","objId","obj","defineProperty","value","clone","deepClone","visited","id","key","hasOwnProperty","forEach","v","i","languages","extend","redef","insertBefore","inside","before","insert","root","grammar","ret","token","newToken","old","DFS","callback","property","propertyType","plugins","highlightAll","async","highlightAllUnder","document","container","env","selector","hooks","run","element","elements","querySelectorAll","highlightElement","language","parent","test","className","parentNode","match","toLowerCase","nodeName","code","textContent","insertHighlightedCode","highlightedCode","innerHTML","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","immediateClose","highlight","text","tokenize","matchGrammar","strarr","index","startPos","oneshot","target","patterns","j","length","pattern","lookbehind","greedy","lookbehindLength","global","flags","RegExp","source","pos","str","lastIndex","exec","from","to","k","p","len","delNum","after","args","push","wrapped","splice","apply","rest","all","add","name","callbacks","matchedStr","join","tag","classes","attributes","aliases","keys","addEventListener","message","parse","close","script","currentScript","getElementsByTagName","pop","src","hasAttribute","readyState","window","requestAnimationFrame","setTimeout","WorkerGlobalScope","self","module","exports","markup","comment","prolog","doctype","cdata","punctuation","namespace","entity","xml","html","mathml","svg","css","atrule","rule","url","string","important","function","style","clike","keyword","boolean","number","operator","javascript","regex","constant","interpolation","js","getPlaceholder","toUpperCase","defineProperties","buildPlaceholders","placeholderPattern","replaceFilter","tokenStack","placeholder","indexOf","tokenizePlaceholders","walkTokens","t","s","substring","middle","replacement","concat","php","string_interpolation","ruby","rb","python","py","keywords","java","c","csharp","dotnet","cpp"],"mappings":"AAIAA,uCAAO,SAgBCC,MAAS,SAAUC,WAGfC,KAAO,8BACPC,SAAW,EAEXC,EAAI,CACJC,OAAQJ,MAAMD,OAASC,MAAMD,MAAMK,OACnCC,4BAA6BL,MAAMD,OAASC,MAAMD,MAAMM,4BACxDC,KAAM,CACFC,OAAQ,SAAUC,eACVA,kBAAkBC,MACX,IAAIA,MAAMD,OAAOE,KAAMP,EAAEG,KAAKC,OAAOC,OAAOG,SAAUH,OAAOI,OAC7DC,MAAMC,QAAQN,QACdA,OAAOO,IAAIZ,EAAEG,KAAKC,QAElBC,OAAOQ,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAAQA,QAAQ,UAAW,MAItFN,KAAM,SAAUO,UACLC,OAAOC,UAAUC,SAASC,KAAKJ,GAAGK,MAAM,GAAI,IAGvDC,MAAO,SAAUC,YACRA,IAAG,MACJN,OAAOO,eAAeD,IAAK,OAAQ,CAAEE,QAASxB,WAE3CsB,IAAG,MAIdG,MAAO,SAASC,UAAUX,EAAGY,aACrBF,MAAOG,GAAIpB,KAAOP,EAAEG,KAAKI,KAAKO,UAClCY,QAAUA,SAAW,GAEbnB,UACC,YACDoB,GAAK3B,EAAEG,KAAKiB,MAAMN,GACdY,QAAQC,WACDD,QAAQC,QAKd,IAAIC,OAHTJ,MAAQ,GACRE,QAAQC,IAAMH,MAEEV,EACRA,EAAEe,eAAeD,OACjBJ,MAAMI,KAAOH,UAAUX,EAAEc,KAAMF,iBAIhCF,UAEN,eACDG,GAAK3B,EAAEG,KAAKiB,MAAMN,GACdY,QAAQC,IACDD,QAAQC,KAEnBH,MAAQ,GACRE,QAAQC,IAAMH,MAEdV,EAAEgB,SAAQ,SAAUC,EAAGC,GACnBR,MAAMQ,GAAKP,UAAUM,EAAGL,YAGrBF,sBAGAV,KAKvBmB,UAAW,CACPC,OAAQ,SAAUP,GAAIQ,WACdrC,KAAOE,EAAEG,KAAKqB,MAAMxB,EAAEiC,UAAUN,SAE/B,IAAIC,OAAOO,MACZrC,KAAK8B,KAAOO,MAAMP,YAGf9B,MAYXsC,aAAc,SAAUC,OAAQC,OAAQC,OAAQC,UAExCC,SADJD,KAAOA,MAAQxC,EAAEiC,WACEI,QACfK,IAAM,OAEL,IAAIC,SAASF,WACVA,QAAQZ,eAAec,OAAQ,IAE3BA,OAASL,WACJ,IAAIM,YAAYL,OACbA,OAAOV,eAAee,YACtBF,IAAIE,UAAYL,OAAOK,WAM9BL,OAAOV,eAAec,SACvBD,IAAIC,OAASF,QAAQE,YAK7BE,IAAML,KAAKH,eACfG,KAAKH,QAAUK,IAGf1C,EAAEiC,UAAUa,IAAI9C,EAAEiC,WAAW,SAASL,IAAKL,OACnCA,QAAUsB,KAAOjB,KAAOS,cACnBT,KAAOc,QAIbA,KAIXI,IAAK,SAASA,IAAIhC,EAAGiC,SAAUxC,KAAMmB,SACjCA,QAAUA,SAAW,OAEjBN,MAAQpB,EAAEG,KAAKiB,UAEd,IAAIY,KAAKlB,KACNA,EAAEe,eAAeG,GAAI,CACrBe,SAAS7B,KAAKJ,EAAGkB,EAAGlB,EAAEkB,GAAIzB,MAAQyB,OAE9BgB,SAAWlC,EAAEkB,GACbiB,aAAejD,EAAEG,KAAKI,KAAKyC,UAEV,WAAjBC,cAA8BvB,QAAQN,MAAM4B,WAItB,UAAjBC,cAA6BvB,QAAQN,MAAM4B,aAChDtB,QAAQN,MAAM4B,YAAa,EAC3BF,IAAIE,SAAUD,SAAUf,EAAGN,WAL3BA,QAAQN,MAAM4B,YAAa,EAC3BF,IAAIE,SAAUD,SAAU,KAAMrB,aAUlDwB,QAAS,GAETC,aAAc,SAASC,MAAOL,UAC1B/C,EAAEqD,kBAAkBC,SAAUF,MAAOL,WAGzCM,kBAAmB,SAASE,UAAWH,MAAOL,cACtCS,IAAM,CACNT,SAAUA,SACVU,SAAU,oGAGdzD,EAAE0D,MAAMC,IAAI,sBAAuBH,aAIrBI,QAFVC,SAAWL,IAAIK,UAAYN,UAAUO,iBAAiBN,IAAIC,UAErDzB,EAAE,EAAY4B,QAAUC,SAAS7B,MACtChC,EAAE+D,iBAAiBH,SAAmB,IAAVR,MAAgBI,IAAIT,WAIxDgB,iBAAkB,SAASH,QAASR,MAAOL,kBAEnCiB,SAAUvB,QAASwB,OAASL,QAEzBK,SAAWnE,KAAKoE,KAAKD,OAAOE,YAC/BF,OAASA,OAAOG,WAGhBH,SACAD,UAAYC,OAAOE,UAAUE,MAAMvE,OAAS,EAAE,KAAK,GAAGwE,cACtD7B,QAAUzC,EAAEiC,UAAU+B,WAI1BJ,QAAQO,UAAYP,QAAQO,UAAUtD,QAAQf,KAAM,IAAIe,QAAQ,OAAQ,KAAO,aAAemD,SAE1FJ,QAAQQ,aAERH,OAASL,QAAQQ,WAEb,OAAOF,KAAKD,OAAOM,YACnBN,OAAOE,UAAYF,OAAOE,UAAUtD,QAAQf,KAAM,IAAIe,QAAQ,OAAQ,KAAO,aAAemD,eAMhGR,IAAM,CACNI,QAASA,QACTI,SAAUA,SACVvB,QAASA,QACT+B,KANOZ,QAAQa,aASfC,sBAAwB,SAAUC,iBAClCnB,IAAImB,gBAAkBA,gBAEtB3E,EAAE0D,MAAMC,IAAI,gBAAiBH,KAE7BA,IAAII,QAAQgB,UAAYpB,IAAImB,gBAE5B3E,EAAE0D,MAAMC,IAAI,kBAAmBH,KAC/BxD,EAAE0D,MAAMC,IAAI,WAAYH,KACxBT,UAAYA,SAAS7B,KAAKsC,IAAII,aAGlC5D,EAAE0D,MAAMC,IAAI,sBAAuBH,KAE9BA,IAAIgB,QAKTxE,EAAE0D,MAAMC,IAAI,mBAAoBH,KAE3BA,IAAIf,WAKLW,OAASvD,MAAMgF,OAAQ,KACnBC,OAAS,IAAID,OAAO7E,EAAE+E,UAE1BD,OAAOE,UAAY,SAASC,KACxBP,sBAAsBO,IAAIC,OAG9BJ,OAAOK,YAAYC,KAAKC,UAAU,CAC9BrB,SAAUR,IAAIQ,SACdQ,KAAMhB,IAAIgB,KACVc,gBAAgB,UAIpBZ,sBAAsB1E,EAAEuF,UAAU/B,IAAIgB,KAAMhB,IAAIf,QAASe,IAAIQ,gBAlB7DU,sBAAsB1E,EAAEG,KAAKC,OAAOoD,IAAIgB,YAPxCxE,EAAE0D,MAAMC,IAAI,WAAYH,MA6BhC+B,UAAW,SAAUC,KAAM/C,QAASuB,cAC5BR,IAAM,CACNgB,KAAMgB,KACN/C,QAASA,QACTuB,SAAUA,iBAEdhE,EAAE0D,MAAMC,IAAI,kBAAmBH,KAC/BA,IAAInD,OAASL,EAAEyF,SAASjC,IAAIgB,KAAMhB,IAAIf,SACtCzC,EAAE0D,MAAMC,IAAI,iBAAkBH,KACvBlD,MAAM+E,UAAUrF,EAAEG,KAAKC,OAAOoD,IAAInD,QAASmD,IAAIQ,WAG1D0B,aAAc,SAAUF,KAAMG,OAAQlD,QAASmD,MAAOC,SAAUC,QAASC,YAChE,IAAIpD,SAASF,WACVA,QAAQZ,eAAec,QAAWF,QAAQE,WAI1CA,OAASoD,kBAITC,SAAWvD,QAAQE,OACvBqD,SAAsC,UAA1BhG,EAAEG,KAAKI,KAAKyF,UAAyBA,SAAW,CAACA,cAExD,IAAIC,EAAI,EAAGA,EAAID,SAASE,SAAUD,EAAG,KAClCE,QAAUH,SAASC,GACnB5D,OAAS8D,QAAQ9D,OACjB+D,aAAeD,QAAQC,WACvBC,SAAWF,QAAQE,OACnBC,iBAAmB,EACnB7F,MAAQ0F,QAAQ1F,SAEhB4F,SAAWF,QAAQA,QAAQI,OAAQ,KAE/BC,MAAQL,QAAQA,QAAQlF,WAAWoD,MAAM,YAAY,GACzD8B,QAAQA,QAAUM,OAAON,QAAQA,QAAQO,OAAQF,MAAQ,KAG7DL,QAAUA,QAAQA,SAAWA,YAGxB,IAAInE,EAAI4D,MAAOe,IAAMd,SAAU7D,EAAI2D,OAAOO,OAAQS,KAAOhB,OAAO3D,GAAGkE,SAAUlE,EAAG,KAE7E4E,IAAMjB,OAAO3D,MAEb2D,OAAOO,OAASV,KAAKU,mBAKrBU,eAAetG,WAIf+F,QAAUrE,GAAK2D,OAAOO,OAAS,EAAG,IAClCC,QAAQU,UAAYF,MAChBtC,MAAQ8B,QAAQW,KAAKtB,qBAKrBuB,KAAO1C,MAAMuB,OAASQ,WAAa/B,MAAM,GAAG6B,OAAS,GACrDc,GAAK3C,MAAMuB,MAAQvB,MAAM,GAAG6B,OAC5Be,EAAIjF,EACJkF,EAAIP,IAECQ,IAAMxB,OAAOO,OAAQe,EAAIE,MAAQD,EAAIF,KAAQrB,OAAOsB,GAAG1G,OAASoF,OAAOsB,EAAI,GAAGZ,UAAYY,EAG3FF,OAFJG,GAAKvB,OAAOsB,GAAGf,YAGTlE,EACF2E,IAAMO,MAKVvB,OAAO3D,aAAc1B,eAKzB8G,OAASH,EAAIjF,EACb4E,IAAMpB,KAAKrE,MAAMwF,IAAKO,GACtB7C,MAAMuB,OAASe,QACZ,CACHR,QAAQU,UAAY,MAEhBxC,MAAQ8B,QAAQW,KAAKF,KACrBQ,OAAS,KAGZ/C,OAQF+B,aACCE,iBAAmBjC,MAAM,GAAKA,MAAM,GAAG6B,OAAS,GAKhDc,IAFAD,KAAO1C,MAAMuB,MAAQU,mBACrBjC,MAAQA,MAAM,GAAGlD,MAAMmF,mBACLJ,WAClB5D,OAASsE,IAAIzF,MAAM,EAAG4F,MACtBM,MAAQT,IAAIzF,MAAM6F,IAElBM,KAAO,CAACtF,EAAGoF,QAEX9E,WACEN,EACF2E,KAAOrE,OAAO4D,OACdoB,KAAKC,KAAKjF,aAGVkF,QAAU,IAAIlH,MAAMqC,MAAON,OAAQrC,EAAEyF,SAASpB,MAAOhC,QAAUgC,MAAO5D,MAAO4D,MAAOgC,WAExFiB,KAAKC,KAAKC,SAENH,OACAC,KAAKC,KAAKF,OAGd3G,MAAMM,UAAUyG,OAAOC,MAAM/B,OAAQ2B,MAEvB,GAAVF,QACApH,EAAE0F,aAAaF,KAAMG,OAAQlD,QAAST,EAAG2E,KAAK,EAAMhE,OAEpDmD,QACA,cAvCIA,mBA6CxBL,SAAU,SAASD,KAAM/C,aACjBkD,OAAS,CAACH,MAEVmC,KAAOlF,QAAQkF,QAEfA,KAAM,KACD,IAAIhF,SAASgF,KACdlF,QAAQE,OAASgF,KAAKhF,cAGnBF,QAAQkF,YAGnB3H,EAAE0F,aAAaF,KAAMG,OAAQlD,QAAS,EAAG,GAAG,GAErCkD,QAGXjC,MAAO,CACHkE,IAAK,GAELC,IAAK,SAAUC,KAAM/E,cACbW,MAAQ1D,EAAE0D,MAAMkE,IAEpBlE,MAAMoE,MAAQpE,MAAMoE,OAAS,GAE7BpE,MAAMoE,MAAMP,KAAKxE,WAGrBY,IAAK,SAAUmE,KAAMtE,SACbuE,UAAY/H,EAAE0D,MAAMkE,IAAIE,SAEvBC,WAAcA,UAAU7B,WAIxB,IAASnD,SAALf,EAAE,EAAae,SAAWgF,UAAU/F,MACzCe,SAASS,OAKrBlD,MAAOA,gBAKFA,MAAMC,KAAMC,QAASC,MAAOuH,WAAY3B,aACxC9F,KAAOA,UACPC,QAAUA,aACVC,MAAQA,WAERyF,OAAmC,GAAzB8B,YAAc,IAAI9B,YAC5BG,SAAWA,UARpBxG,MAAMD,MAAQI,EAWdM,MAAM+E,UAAY,SAASvE,EAAGkD,SAAUC,WACpB,iBAALnD,SACAA,KAGPJ,MAAMC,QAAQG,UACPA,EAAEF,KAAI,SAASgD,gBACXtD,MAAM+E,UAAUzB,QAASI,SAAUlD,MAC3CmH,KAAK,QAGRzE,IAAM,CACNjD,KAAMO,EAAEP,KACRC,QAASF,MAAM+E,UAAUvE,EAAEN,QAASwD,SAAUC,QAC9CiE,IAAK,OACLC,QAAS,CAAC,QAASrH,EAAEP,MACrB6H,WAAY,GACZpE,SAAUA,SACVC,OAAQA,WAGRnD,EAAEL,MAAO,KACL4H,QAAU3H,MAAMC,QAAQG,EAAEL,OAASK,EAAEL,MAAQ,CAACK,EAAEL,OACpDC,MAAMM,UAAUuG,KAAKG,MAAMlE,IAAI2E,QAASE,SAG5CrI,EAAE0D,MAAMC,IAAI,OAAQH,SAEhB4E,WAAarH,OAAOuH,KAAK9E,IAAI4E,YAAYxH,KAAI,SAASkH,aAC/CA,KAAO,MAAQtE,IAAI4E,WAAWN,OAAS,IAAIjH,QAAQ,KAAM,UAAY,OAC7EoH,KAAK,WAED,IAAMzE,IAAI0E,IAAM,WAAa1E,IAAI2E,QAAQF,KAAK,KAAO,KAAOG,WAAa,IAAMA,WAAa,IAAM,IAAM5E,IAAIhD,QAAU,KAAOgD,IAAI0E,IAAM,MAI7IrI,MAAMyD,gBACFzD,MAAM0I,kBAKNvI,EAAEE,6BAEHL,MAAM0I,iBAAiB,WAAW,SAAUtD,SACpCuD,QAAUpD,KAAKqD,MAAMxD,IAAIC,MACzBpF,KAAO0I,QAAQxE,SACfQ,KAAOgE,QAAQhE,KACfc,eAAiBkD,QAAQlD,eAE7BzF,MAAMsF,YAAYnF,EAAEuF,UAAUf,KAAMxE,EAAEiC,UAAUnC,MAAOA,OACnDwF,gBACAzF,MAAM6I,WAEX,GAGA1I,GAlBIA,MAsBX2I,OAASrF,SAASsF,eAAiB,GAAGzH,MAAMD,KAAKoC,SAASuF,qBAAqB,WAAWC,aAE1FH,SACA3I,EAAE+E,SAAW4D,OAAOI,IAEf/I,EAAEC,QAAW0I,OAAOK,aAAa,iBACP,YAAxB1F,SAAS2F,WACJC,OAAOC,sBACPD,OAAOC,sBAAsBnJ,EAAEmD,cAE/B+F,OAAOE,WAAWpJ,EAAEmD,aAAc,IAItCG,SAASiF,iBAAiB,mBAAoBvI,EAAEmD,gBAKrDnD,EA/gBE,CAdkB,oBAAXkJ,OACdA,OAEgC,oBAAtBG,mBAAqCC,gBAAgBD,kBAC3DC,KACA,IA4hBY,oBAAXC,QAA0BA,OAAOC,UACxCD,OAAOC,QAAU5J,OAIC,oBAAX2G,SACPA,OAAO3G,MAAQA,OAQnBA,MAAMqC,UAAUwH,OAAS,CACzBC,QAAS,kBACTC,OAAQ,iBACRC,QAAS,sBACTC,MAAO,0BACP3B,IAAK,CACD/B,QAAS,yGACTE,QAAQ,EACRhE,OAAQ,CACR6F,IAAK,CACD/B,QAAS,kBACT9D,OAAQ,CACRyH,YAAa,QACbC,UAAW,8BAGD,CACV5D,QAAS,oDACT9D,OAAQ,CACRyH,YAAa,CACT,KACA,CACA3D,QAAS,gBACTC,YAAY,MAKpB0D,YAAa,mBACA,CACT3D,QAAS,YACT9D,OAAQ,CACR0H,UAAW,mBAMnBC,OAAQ,qBAGRpK,MAAMqC,UAAUwH,OAAOvB,IAAI7F,OAAO,cAAcA,OAAO2H,OAASpK,MAAMqC,UAAUwH,OAAOO,OAGvFpK,MAAM8D,MAAMmE,IAAI,QAASrE,MAEJ,WAAbA,IAAIjD,OACJiD,IAAI4E,WAAJ,MAA0B5E,IAAIhD,QAAQK,QAAQ,QAAS,SAI/DjB,MAAMqC,UAAUgI,IAAMrK,MAAMqC,UAAUwH,OACtC7J,MAAMqC,UAAUiI,KAAOtK,MAAMqC,UAAUwH,OACvC7J,MAAMqC,UAAUkI,OAASvK,MAAMqC,UAAUwH,OACzC7J,MAAMqC,UAAUmI,IAAMxK,MAAMqC,UAAUwH,OAOtC7J,MAAMqC,UAAUoI,IAAM,CACtBX,QAAS,mBACTY,OAAQ,CACJnE,QAAS,8BACT9D,OAAQ,CACRkI,KAAM,YAIVC,IAAK,iEACL/G,SAAU,2BACVgH,OAAQ,CACJtE,QAAS,gDACTE,QAAQ,GAEZrD,SAAU,+CACV0H,UAAW,kBACXC,SAAU,oBACVb,YAAa,YAGblK,MAAMqC,UAAUoI,IAAIC,OAAOjI,OAAOsF,KAAO/H,MAAMqC,UAAUoI,IAErDzK,MAAMqC,UAAUwH,SACpB7J,MAAMqC,UAAUG,aAAa,SAAU,MAAO,CAC1CwI,MAAO,CACPzE,QAAS,0CACTC,YAAY,EACZ/D,OAAQzC,MAAMqC,UAAUoI,IACxB5J,MAAO,eACP4F,QAAQ,KAIZzG,MAAMqC,UAAUG,aAAa,SAAU,aAAc,cACnC,CACd+D,QAAS,6CACT9D,OAAQ,aACS,CACb8D,QAAS,aACT9D,OAAQzC,MAAMqC,UAAUwH,OAAOvB,IAAI7F,QAEnCyH,YAAa,qCACC,CACd3D,QAAS,MACT9D,OAAQzC,MAAMqC,UAAUoI,MAG5B5J,MAAO,iBAERb,MAAMqC,UAAUwH,OAAOvB,MAO1BtI,MAAMqC,UAAU4I,MAAQ,CACxBnB,QAAS,CACL,CACAvD,QAAS,kCACTC,YAAY,GAEZ,CACAD,QAAS,mBACTC,YAAY,EACZC,QAAQ,IAGZoE,OAAQ,CACJtE,QAAS,iDACTE,QAAQ,gBAEE,CACVF,QAAS,iGACTC,YAAY,EACZ/D,OAAQ,CACRyH,YAAa,UAGjBgB,QAAS,6GACTC,QAAS,qBACTJ,SAAU,oBACVK,OAAQ,wDACRC,SAAU,0DACVnB,YAAa,iBAQblK,MAAMqC,UAAUiJ,WAAatL,MAAMqC,UAAUC,OAAO,QAAS,CAC7D4I,QAAS,8TACTE,OAAQ,wGAERL,SAAU,gDACVM,SAAU,mGAGVrL,MAAMqC,UAAUG,aAAa,aAAc,UAAW,CACtD+I,MAAO,CACHhF,QAAS,gHACTC,YAAY,EACZC,QAAQ,uBAGS,CACjBF,QAAS,wHACT1F,MAAO,YAEX2K,SAAU,uBAGVxL,MAAMqC,UAAUG,aAAa,aAAc,SAAU,mBAClC,CACf+D,QAAS,mCACTE,QAAQ,EACRhE,OAAQ,CACRgJ,cAAe,CACXlF,QAAS,YACT9D,OAAQ,6BACqB,CACzB8D,QAAS,UACT1F,MAAO,eAEXkH,KAAM,OAGV8C,OAAQ,cAIZ7K,MAAMqC,UAAUiJ,WAAW,mBAAmB7I,OAAOgJ,cAAchJ,OAAOsF,KAAO/H,MAAMqC,UAAUiJ,WAE7FtL,MAAMqC,UAAUwH,QACpB7J,MAAMqC,UAAUG,aAAa,SAAU,MAAO,CAC1CuG,OAAQ,CACRxC,QAAS,4CACTC,YAAY,EACZ/D,OAAQzC,MAAMqC,UAAUiJ,WACxBzK,MAAO,sBACP4F,QAAQ,KAKZzG,MAAMqC,UAAUqJ,GAAK1L,MAAMqC,UAAUiJ,oBAK1BtL,gBASE2L,eAAevH,SAAU4B,aACvB,MAAQ5B,SAASwH,cAAgB5F,MAAQ,MAGpD7E,OAAO0K,iBAAiB7L,MAAMqC,UAAU,qBAAuB,GAAI,CAC/DyJ,kBAAmB,CAYfnK,MAAO,SAAUiC,IAAKQ,SAAU2H,mBAAoBC,kBAC5CpI,IAAIQ,WAAaA,cAIjB6H,WAAarI,IAAIqI,WAAa,GAElCrI,IAAIgB,KAAOhB,IAAIgB,KAAK3D,QAAQ8K,oBAAoB,SAAUtH,UACzB,mBAAlBuH,gBAAiCA,cAAcvH,cAC/CA,cAGPyH,YADA9J,EAAI6J,WAAW3F,QAIqD,IAAjE1C,IAAIgB,KAAKuH,QAAQD,YAAcP,eAAevH,SAAUhC,OACzDA,SAGN6J,WAAW7J,GAAKqC,MAETyH,eAIXtI,IAAIf,QAAU7C,MAAMqC,UAAUwH,UAGtCuC,qBAAsB,CAOlBzK,MAAO,SAAUiC,IAAKQ,aACdR,IAAIQ,WAAaA,UAAaR,IAAIqI,YAKtCrI,IAAIf,QAAU7C,MAAMqC,UAAU+B,cAE1BiC,EAAI,EACJqC,KAAOvH,OAAOuH,KAAK9E,IAAIqI,sBAElBI,WAAW5L,YACX,IAAI2B,EAAI,EAAGA,EAAI3B,OAAO6F,UAEnBD,GAAKqC,KAAKpC,QAFiBlE,IAAK,KAMhCW,MAAQtC,OAAO2B,MACE,iBAAVW,OAAuBA,MAAMnC,SAAoC,iBAAlBmC,MAAMnC,QAAuB,KAC/EyG,EAAIqB,KAAKrC,GACTiG,EAAI1I,IAAIqI,WAAW5E,GACnBkF,EAAqB,iBAAVxJ,MAAqBA,MAAQA,MAAMnC,QAC9CsL,YAAcP,eAAevH,SAAUiD,GAEvCrB,MAAQuG,EAAEJ,QAAQD,gBAClBlG,OAAS,EAAG,GACVK,MAEE3D,OAAS6J,EAAEC,UAAU,EAAGxG,OACxByG,OAAS,IAAIzM,MAAMU,MAAM0D,SAAUpE,MAAM6F,SAASyG,EAAG1I,IAAIf,SAAU,YAAcuB,SAAUkI,GAC3F7E,MAAQ8E,EAAEC,UAAUxG,MAAQkG,YAAY5F,QAExCoG,YAAc,GACdhK,QACAgK,YAAY/E,KAAKG,MAAM4E,YAAaL,WAAW,CAAC3J,UAEpDgK,YAAY/E,KAAK8E,QACbhF,OACAiF,YAAY/E,KAAKG,MAAM4E,YAAaL,WAAW,CAAC5E,SAG/B,iBAAV1E,MACPtC,OAAOoH,OAAOC,MAAMrH,OAAQ,CAAC2B,EAAG,GAAGuK,OAAOD,cAE1C3J,MAAMnC,QAAU8L,kBAGjB3J,MAAMnC,SACbyL,WAAWtJ,MAAMnC,gBAIlBH,OAGX4L,CAAWzI,IAAInD,cAK7BT,gBAiBSA,OACPA,MAAMqC,UAAUuK,IAAM5M,MAAMqC,UAAUC,OAAO,QAAS,SACvC,+eACA,CACPiE,QAAS,sBACT1F,MAAO,qBAEC,CACR,uBACA,yBAEO,CACP0F,QAAS,uCACTC,YAAY,KAIpBxG,MAAMqC,UAAUG,aAAa,MAAO,SAAU,iBACzB,CACb+D,QAAS,eACTC,YAAY,EACZ3F,MAAO,aAIfb,MAAMqC,UAAUG,aAAa,MAAO,UAAW,WAC9B,CACT+D,QAAS,6BACT1F,MAAO,eAIfb,MAAMqC,UAAUG,aAAa,MAAO,UAAW,UAC/B,8BACD,CACP+D,QAAS,kCACTC,YAAY,EACZ/D,OAAQ,CACJyH,YAAa,SAMzBlK,MAAMqC,UAAUG,aAAa,MAAO,WAAY,UAChC,CACR+D,QAAS,YACTC,YAAY,SAIhBqG,qBAAuB,CACvBtG,QAAS,6EACTC,YAAY,EACZ/D,OAAQ,CACJsF,KAAM/H,MAAMqC,UAAUuK,MAI9B5M,MAAMqC,UAAUG,aAAa,MAAO,SAAU,iBACzB,CACb+D,QAAS,kDACTE,QAAQ,EACR5F,MAAO,SACP4B,OAAQ,WACS,CACT8D,QAAS,2BACT1F,MAAO,SACP4B,OAAQ,aACW,oCAKb,CACd8D,QAAS,sGACTE,QAAQ,EACR5F,MAAO,SACP4B,OAAQ,WACS,CACT8D,QAAS,yCACT1F,MAAO,SACP4B,OAAQ,aACW,+BAGNoK,8CAGD,CACpBtG,QAAS,yBACTE,QAAQ,EACR5F,MAAO,iCAEa,CACpB0F,QAAS,yBACTE,QAAQ,EACR5F,MAAO,SACP4B,OAAQ,eACaoK,gCAKtB7M,MAAMqC,UAAUuK,IAAhB,OAEP5M,MAAM8D,MAAMmE,IAAI,mBAAmB,SAASrE,QACnC,MAAMU,KAAKV,IAAIgB,OAKpB5E,MAAMqC,UAAU,qBAAqByJ,kBAAkBlI,IAAK,MAD3C,sIAIrB5D,MAAM8D,MAAMmE,IAAI,kBAAkB,SAASrE,KACvC5D,MAAMqC,UAAU,qBAAqB+J,qBAAqBxI,IAAK,WAGrE5D,OAEFA,MAAMqC,UAAUG,aAAa,MAAO,WAAY,MACpC,kBACE,6IACD,CACL+D,QAAS,cACT9D,OAAQ,CACJyI,QAAS,qBACThB,YAAa,qBAcflK,OACNA,MAAMqC,UAAUyK,KAAO9M,MAAMqC,UAAUC,OAAO,QAAS,SACxC,CACP,MACA,CACIiE,QAAS,0BACTE,QAAQ,YAGL,6RAGXgF,cAAgB,CAChBlF,QAAS,aACT9D,OAAQ,WACS,CACT8D,QAAS,WACT1F,MAAO,OAEXkH,KAAM/H,MAAMqC,UAAUyK,cAIvB9M,MAAMqC,UAAUyK,KAAK/B,SAE5B/K,MAAMqC,UAAUG,aAAa,OAAQ,UAAW,OACnC,CACL,CACI+D,QAAS,+DACTE,QAAQ,EACRhE,OAAQ,eACagJ,gBAGzB,CACIlF,QAAS,wCACTE,QAAQ,EACRhE,OAAQ,eACagJ,gBAGzB,CAEIlF,QAAS,yDACTE,QAAQ,EACRhE,OAAQ,eACagJ,gBAGzB,CACIlF,QAAS,0CACTE,QAAQ,EACRhE,OAAQ,eACagJ,gBAGzB,CACIlF,QAAS,sCACTE,QAAQ,EACRhE,OAAQ,eACagJ,gBAGzB,CACIlF,QAAS,6EACTC,YAAY,EACZC,QAAQ,aAGJ,sCACF,CACNF,QAAS,mCACTC,YAAY,uBAEK,CACjBD,QAAS,mBACTC,YAAY,EACZ/D,OAAQ,UACQ,OACZsF,KAAM/H,MAAMqC,UAAUyK,SAKlC9M,MAAMqC,UAAUG,aAAa,OAAQ,SAAU,SAChC,wPACC,0BAGhBxC,MAAMqC,UAAUyK,KAAKjC,OAAS,CAC1B,CACItE,QAAS,+DACTE,QAAQ,EACRhE,OAAQ,eACagJ,gBAGzB,CACIlF,QAAS,wCACTE,QAAQ,EACRhE,OAAQ,eACagJ,gBAGzB,CAEIlF,QAAS,yDACTE,QAAQ,EACRhE,OAAQ,eACagJ,gBAGzB,CACIlF,QAAS,0CACTE,QAAQ,EACRhE,OAAQ,eACagJ,gBAGzB,CACIlF,QAAS,sCACTE,QAAQ,EACRhE,OAAQ,eACagJ,gBAGzB,CACIlF,QAAS,2DACTE,QAAQ,EACRhE,OAAQ,eACagJ,iBAK7BzL,MAAMqC,UAAU0K,GAAK/M,MAAMqC,UAAUyK,MACvC9M,OAKFA,MAAMqC,UAAU2K,OAAS,SACV,CACPzG,QAAS,eACTC,YAAY,0BAEQ,CACpBD,QAAS,sEACTE,QAAQ,EACRhE,OAAQ,eACa,CAEb8D,QAAS,2EACTC,YAAY,EACZ/D,OAAQ,eACW,CACX8D,QAAS,qBACTC,YAAY,uBAEK,CACjBD,QAAS,kBACT1F,MAAO,eAEXkH,KAAM,cAGJ,mCAGM,CACpBxB,QAAS,uCACTE,QAAQ,EACR5F,MAAO,iBAED,CACN0F,QAAS,mDACTE,QAAQ,YAEA,CACRF,QAAS,4CACTC,YAAY,gBAEF,CACVD,QAAS,mBACTC,YAAY,aAEH,CACTD,QAAS,wBACTC,YAAY,EACZ3F,MAAO,CAAC,aAAc,eACtB4B,OAAQ,aACW,eAGZ,2MACA,8hBACA,iCACD,sGACE,gEACG,iBAGnBzC,MAAMqC,UAAU2K,OAAO,wBAAwBvK,OAA/C,cAAuEA,OAAOsF,KAAO/H,MAAMqC,UAAU2K,OAErGhN,MAAMqC,UAAU4K,GAAKjN,MAAMqC,UAAU2K,gBAK1BhN,WAEHkN,SAAW,0aAGX3I,UAAY,4BAEhBvE,MAAMqC,UAAU8K,KAAOnN,MAAMqC,UAAUC,OAAO,QAAS,cACrC,CACViC,UAIA,2CAEO2I,kBACC,CACRlN,MAAMqC,UAAU4I,MAAMF,SACtB,CACIxE,QAAS,kBACTC,YAAY,WAGV,4HACE,CACRD,QAAS,gEACTC,YAAY,KAIpBxG,MAAMqC,UAAUG,aAAa,OAAQ,aAAc,YACjC,CACV3B,MAAO,cACP0F,QAAS,eACTC,YAAY,aAEH,CACTD,QAAS,mIACTC,YAAY,EACZ/D,OAAQ,aACW,gBAGX,CACR8D,QAAS,sEACT9D,OAAQ,cACU8B,kBACH2I,qBACI,qBACH,aAI1BlN,OAKFA,MAAMqC,UAAU+K,EAAIpN,MAAMqC,UAAUC,OAAO,QAAS,cAClC,CACViE,QAAS,4BACTC,YAAY,WAEL,+UACC,yDACF,0GAGdxG,MAAMqC,UAAUG,aAAa,IAAK,SAAU,OAC/B,CAGL+D,QAAS,qDACTC,YAAY,EACZ3F,MAAO,WACP4B,OAAQ,QAEM,CACN8D,QAAS,8CACTC,YAAY,aAGH,CACTD,QAAS,4GACTC,YAAY,EACZ3F,MAAO,sBAKP,sIAGTb,MAAMqC,UAAU+K,EAAhB,QAKPpN,MAAMqC,UAAUgL,OAASrN,MAAMqC,UAAUC,OAAO,QAAS,SAC1C,opBACD,CACN,CACIiE,QAAS,yCACTE,QAAQ,GAEZ,CACIF,QAAS,mCACTE,QAAQ,iBAGF,CACV,CAEIF,QAAS,mCACT9D,OAAQ,CACJyH,YAAa,OAGrB,CAEI3D,QAAS,2BACTC,YAAY,EACZ/D,OAAQ,CACJyH,YAAa,OAGrB,CAEI3D,QAAS,0EACTC,YAAY,EACZ/D,OAAQ,CACJyH,YAAa,OAGrB,CAEI3D,QAAS,wEACTC,YAAY,EACZ/D,OAAQ,CACJyH,YAAa,eAIf,qDACE,6DACG,2BAGnBlK,MAAMqC,UAAUG,aAAa,SAAU,aAAc,kBAC/B,CACd+D,QAAS,8BACT9D,OAAQ,CACJsI,SAAU,oBACI,CACVxE,QAAS,yBACT9D,OAAQ,CACJyH,YAAa,OAGrBgB,QAASlL,MAAMqC,UAAUgL,OAAOnC,QAChChB,YAAa,2BAGL,CACZ3D,QAAS,aACTC,YAAY,EACZ3F,MAAO,WACP4B,OAAQ,WAES,CACT8D,QAAS,2FACTC,YAAY,EACZ3F,MAAO,eAMvBb,MAAMqC,UAAUiL,OAAStN,MAAMqC,UAAUgL,OAKzCrN,MAAMqC,UAAUkL,IAAMvN,MAAMqC,UAAUC,OAAO,IAAK,cAChC,CACViE,QAAS,kCACTC,YAAY,WAEL,smBACA,8BACC,mHAGhBxG,MAAMqC,UAAUG,aAAa,MAAO,SAAU,cAC5B,CACV+D,QAAS,oCACT1F,MAAO,SACP4F,QAAQ"}